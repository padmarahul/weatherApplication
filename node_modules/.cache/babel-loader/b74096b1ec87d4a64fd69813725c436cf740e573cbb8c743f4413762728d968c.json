{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paruchurisatyendra/Desktop/tmfrontend/weatherApplication/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"/Users/paruchurisatyendra/Desktop/tmfrontend/weatherApplication/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/Users/paruchurisatyendra/Desktop/tmfrontend/weatherApplication/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var GEO_API_URL='https://wft-geo-db.p.rapidapi.com/v1/geo';var WEATHER_API_URL='https://api.openweathermap.org/data/2.5';var WEATHER_API_KEY='66ca1e773d95aeac54934ba070bb12d7';var GEO_API_OPTIONS={method:'GET',headers:{'X-RapidAPI-Key':'4f0dcce84bmshac9e329bd55fd14p17ec6fjsnff18c2e61917','X-RapidAPI-Host':'wft-geo-db.p.rapidapi.com'}};export function fetchWeatherData(_x,_x2){return _fetchWeatherData.apply(this,arguments);}function _fetchWeatherData(){_fetchWeatherData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(lat,lon){var _yield$Promise$all,_yield$Promise$all2,weatherPromise,forcastPromise,weatherResponse,forcastResponse;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Promise.all([fetch(\"\".concat(WEATHER_API_URL,\"/weather?lat=\").concat(lat,\"&lon=\").concat(lon,\"&appid=\").concat(WEATHER_API_KEY,\"&units=metric\")),fetch(\"\".concat(WEATHER_API_URL,\"/forecast?lat=\").concat(lat,\"&lon=\").concat(lon,\"&appid=\").concat(WEATHER_API_KEY,\"&units=metric\"))]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);weatherPromise=_yield$Promise$all2[0];forcastPromise=_yield$Promise$all2[1];_context.next=9;return weatherPromise.json();case 9:weatherResponse=_context.sent;_context.next=12;return forcastPromise.json();case 12:forcastResponse=_context.sent;return _context.abrupt(\"return\",[weatherResponse,forcastResponse]);case 16:_context.prev=16;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 19:case\"end\":return _context.stop();}},_callee,null,[[0,16]]);}));return _fetchWeatherData.apply(this,arguments);}export function fetchCities(_x3){return _fetchCities.apply(this,arguments);}function _fetchCities(){_fetchCities=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(input){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"\".concat(GEO_API_URL,\"/cities?minPopulation=10000&namePrefix=\").concat(input),GEO_API_OPTIONS);case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;return _context2.abrupt(\"return\",data);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);return _context2.abrupt(\"return\");case 14:case\"end\":return _context2.stop();}},_callee2,null,[[0,10]]);}));return _fetchCities.apply(this,arguments);}","map":{"version":3,"names":["GEO_API_URL","WEATHER_API_URL","WEATHER_API_KEY","GEO_API_OPTIONS","method","headers","fetchWeatherData","_x","_x2","_fetchWeatherData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lat","lon","_yield$Promise$all","_yield$Promise$all2","weatherPromise","forcastPromise","weatherResponse","forcastResponse","wrap","_callee$","_context","prev","next","Promise","all","fetch","concat","sent","_slicedToArray","json","abrupt","t0","console","log","stop","fetchCities","_x3","_fetchCities","_callee2","input","response","data","_callee2$","_context2"],"sources":["/Users/paruchurisatyendra/Desktop/tmfrontend/weatherApplication/src/services/WeatherServices.js"],"sourcesContent":["const GEO_API_URL = 'https://wft-geo-db.p.rapidapi.com/v1/geo';\n\nconst WEATHER_API_URL = 'https://api.openweathermap.org/data/2.5';\nconst WEATHER_API_KEY = '66ca1e773d95aeac54934ba070bb12d7';\n\nconst GEO_API_OPTIONS = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': '4f0dcce84bmshac9e329bd55fd14p17ec6fjsnff18c2e61917',\n    'X-RapidAPI-Host': 'wft-geo-db.p.rapidapi.com',\n  },\n};\n\nexport async function fetchWeatherData(lat, lon) {\n  try {\n    let [weatherPromise, forcastPromise] = await Promise.all([\n      fetch(\n        `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n      ),\n      fetch(\n        `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n      ),\n    ]);\n\n    const weatherResponse = await weatherPromise.json();\n    const forcastResponse = await forcastPromise.json();\n    return [weatherResponse, forcastResponse];\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCities(input) {\n  try {\n    const response = await fetch(\n      `${GEO_API_URL}/cities?minPopulation=10000&namePrefix=${input}`,\n      GEO_API_OPTIONS\n    );\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}